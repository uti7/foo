#!/bin/bash -f
set -f
function usage {
  # selfname: ${0//*\//}
  cat << 'EOT'
usage:
  fgvi [-d DIR] [-ni] PATTERN FILE [...]
  fgvi [-d DIR] [-n] -l FILE [...]

  -d DIR: search-path what single directry
  -i          : ignore case for PATTERN
  -l          : do not mind any PATTERN
  -n          : no vim, only output like a grep
  PATTERN: re
  FILE   : basename
           also wildcard-char must be escaped (e.g. \*.txt)

   ex.1)
     $ fgvi -n . \*
     same as find . -name \* -print
   ex.2)
     $ fgvi . abc\*.xml
     same as vi `find . -name abc\*.xml -print`
   ex.3)
     $ fgvi . PATTERN abc\*.xml
     same as  vi `grep -l PATTERN (find . -name abc\*.xml -print)`

EOT
}

[ "$#" -lt 2 ] && { usage; exit 2; }

while getopts 'd:nil' opt
do
    case $opt in
    d)  base_path="$OPTARG";;
    n)  is_not_vi=1;;
    i)  ignore_case_opt="-i";;
    l)  reg_exp=".";;
		*)  usage; exit 2;;
		esac
done

shift `expr $OPTIND - 1` 1>/dev/null 2>&1
set -f

vi=vim

#base_path="${base_path:-.}"

if [ -z "$reg_exp" ]; then
  reg_exp="$1"
  shift
fi

file_spec_org=""
if [ -z "$base_path" ]; then
  for f in $*
  do
    d=`dirname $f`
    if [ "$d" != "." ]; then
      base_path="$base_path $d"
    fi
    file_spec_org="$file_spec_org `basename $f`"
  done
else
  for f in $*
  do
    file_spec_org="$file_spec_org `basename $f`"
  done
fi

file_spec=""
for f in $file_spec_org
do
  if [ -z "$file_spec" ]; then
    file_spec="-name $f"
  else
    file_spec="$file_spec  -o -name $f"
  fi

  [ -z "$file_spec" ] && { usage; exit 2; }

done

file_spec="( $file_spec ) -a ( ! -name *.swp )"

if [ "${is_not_vi:-0}" -eq 1 ]; then
  if [ "$reg_exp" != "." ]; then
    exec find $base_path -type f $file_spec -exec grep -EHn ${ignore_case_opt:-} "$reg_exp" {} \;
  else
    exec find $base_path -type f $file_spec -exec grep -EHl ${ignore_case_opt:-} "$reg_exp" {} \;
  fi
else
  matched=`find $base_path -type f $file_spec -exec grep -Eq ${ignore_case_opt:-} "$reg_exp" {} \; -print`
  if [ ! -z "$matched" ]; then
    if [ "$reg_exp" != "." ]; then
      re4vi=`echo "$reg_exp"|sed -e 's#\([()+|]\)#\\\\\1#g'`
      [ -n "$ignore_case_opt" ] && re4vi="${re4vi}\c"
      exec $vi "+/$re4vi/" $matched
    else
      exec $vi $matched
    fi
  else
    echo "$reg_exp: No matched."
    exit 1
  fi
fi
