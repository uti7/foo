#!/bin/bash
myname=${0//*\//}

function usage {
  cat << EOT
name:
  $myname - kill process by PATTERN

usage:
  $myname [-lW] [-t TTY]  PATTERN
  $myname [-h]

  PATTERN   : a reg-exp for target that ps output. typically, specify proc-name
  -l        : only show list
  -t TTY    : filter by TTY, (e.g. \`-t pty3')
  -W        : include windows process as a target

  NOTE: can't kill the windows process with the kill command, so use "taskkill.exe / pid NNN"
EOT
}

opt=`getopt -q -o hlt:W -- "$@"`
[ $? -ne 0 ] && usage && exit 2

eval set -- "$opt"
while [ 0 ]
do
    case $1 in
    -l) is_list_only=1; shift;;
    -t) tty="$2"; shift 2;;
    -W) is_win_proc=W; shift;;
    --) shift; break;;
    *) usage; exit 2;;
    esac
done
[ $# -eq 0 ] && usage && exit 2

# ps output format depended
case `uname -o` in
  Msys)
    pid_column=2
    tty_column=4
    ;;
  GNU/Linux)
    pid_column=2
    tty_column=6
    ;;
  *)
    pid_column=2
    tty_column=4
esac

awk -v pid_column="$pid_column" -v tty_column="$tty_column" -v tty="$tty" \
-v _beExcluded=_beExcluded \
-v is_list_only=${is_list_only:-0} -v is_win_proc=${is_win_proc:-} -v n="$*" 'BEGIN{
cmd = "ps -ef" is_win_proc;
if(tty == ""){
  tty_re=".";
}
else{
  tty_re = "^" tty "$";
}
for(i=0; (cmd|getline) > 0; i++){
  if(i == 0){ print $0; continue; }
		if(match($0,n)>0 && match($0,"_beExcluded") == 0 && match($tty_column, tty_re)>0){
    if(is_list_only == 1){
      print "# " $0;
      print "kill " $pid_column;
    }else{
      print $0;
    }
    pids[$pid_column]=$0;
  }
}
close(cmd);
exit(0);
}
END{
if(is_list_only == 1){ exit(0); }
q="";
if(length(pids)==0){ print n ": no such process."; exit(1); }
printf("-- \n\n");
for(pid in pids){
  if(pids[pid]!=""){
    print(pids[pid]);
    if(q != "a"){
      printf("kill? ([y]es, [s]kip, yes to [a]ll or else):");
      cmd="sh -c \"read q && echo \\$q\"";
      while((cmd|getline q) > 0){
      }
      close(cmd);
    }
    if(q == "y" || q == "a"){
      cmd="kill " pid;
      print cmd;
      system(cmd);
      close(cmd);
      continue;
    }
    if(q == "s"){
      continue;
    }
    else{ break; }
  }
}
  print "done.";
}'
