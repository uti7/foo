#   !/bin/bash
function is_ancestor_vim
{
  # $1: my pud
  # $2: vim command (e.g. /usr/bin/vim or simply, vim)
  my_pid=$1
  target_cmd=$2

  # if necessary, setting follows
  ps_cmd="ps -ef"
  pid_column=2
  ppid_column=3
  cmd_column=6

  $ps_cmd | awk -v pid_column=$pid_column \
    -v ppid_column=$ppid_column \
    -v cmd_column=$cmd_column \
    -v my_pid="$my_pid" \
    -v target_cmd="$target_cmd" \
  'function get_parent(pid){ \
#print "DEBUG: pid=" pid; \
    split(plist[pid], item, ","); \
    return item[1]; \
  }\
  { \
#FIXME: there is a filed what splited by FS as following STIME \
    plist[$pid_column] = sprintf("%d,%s", $ppid_column, $cmd_column); \
  } \
  END{ \
    lookup_pid = my_pid; \
#print "DEBUG: lookup_pid=" lookup_pid; \
    while((lookup_pid = get_parent(lookup_pid)) != ""){ \
      sub(/^.*\//, "", item[2]); \
#print "DEBUG: cmd=" item[2]; \
      if(item[2] == target_cmd){ \
        exit(0); \
      } \
    } \
    exit(1); }'
}
#     UID     PID    PPID  TTY        STIME COMMAND
#      ga  254320  297684 pty0     02:03:12 /usr/bin/ps
#      ga  280208  282216 pty0       Mar  1 /usr/bin/bash
#      ga  279008  280208 pty0     01:16:06 /usr/bin/vim
#      ga  282216       1 ?          Mar  1 /usr/bin/mintty
#      ga  297684  279008 pty0     02:03:12 /usr/bin/bash

is_ancestor_vim $$ vim
exit $?
